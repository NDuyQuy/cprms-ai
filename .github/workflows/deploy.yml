name: Build and Deploy AI App to Azure Container App

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: quynd17/cprms-ai
  IMAGE_TAG: main-${{ github.sha }}
  APP_NAME: cprms-ai
  RG: cprms
  LOCATION: southeastasia
  CONTAINER_ENV_VARS: |
    DB_URL=${{ secrets.DB_URL }},
    MODEL_PATH=${{ secrets.MODEL_PATH }}

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

      - name: Push Docker image
        run: docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  deploy:
    name: Deploy to Azure Container App
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Ensure Azure Container App exists
        run: |
          az config set extension.use_dynamic_install=yes_without_prompt

          APP_EXISTS=$(az containerapp show --name ${{ env.APP_NAME }} --resource-group ${{ env.RG }} --only-show-errors --query name -o tsv || echo "")
          if [ -z "$APP_EXISTS" ]; then
            echo "Creating new Azure Container App: ${{ env.APP_NAME }}"

            az containerapp create \
              --name ${{ env.APP_NAME }} \
              --resource-group ${{ env.RG }} \
              --image ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
              --environment cprms-env \
              --ingress external \
              --target-port 8000 \
              --cpu 2.0 --memory 4.0Gi \
              --env-vars ${{ env.CONTAINER_ENV_VARS }}
          else
            echo "Updating existing Azure Container App: ${{ env.APP_NAME }}"

            az containerapp update \
              --name ${{ env.APP_NAME }} \
              --resource-group ${{ env.RG }} \
              --image ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
              --set-env-vars ${{ env.CONTAINER_ENV_VARS }}
          fi